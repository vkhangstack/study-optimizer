# Docker Compose file for Zalo Bot (default)
services:
  # PostgreSQL Database
  database:
    image: postgres:15-alpine
    container_name: studyoptimizer-db-prod
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-studyoptimizer}
      POSTGRES_USER: ${POSTGRES_USER:-studyoptimizer_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-studyoptimizer_password}
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256 --auth-local=scram-sha-256"
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - database_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - studyoptimizer-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-studyoptimizer_user} -d ${POSTGRES_DB:-studyoptimizer}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    command: >
      postgres
      -c shared_preload_libraries=pg_stat_statements
      -c pg_stat_statements.track=all
      -c max_connections=200
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
      -c maintenance_work_mem=64MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100
      -c random_page_cost=1.1
      -c effective_io_concurrency=200

  # Zalo Bot Application
  app:
    image: vkhangstack/studyoptimizer-bot:latest
    container_name: studyoptimizer-bot
    restart: unless-stopped
    environment:
      DATABASE_URL: ${DATABASE_URL}
      PORT: ${PORT:-3000}
      ZALO_BOT_TOKEN: ${ZALO_BOT_TOKEN}
      WEBHOOK_URL: ${WEBHOOK_URL}
      WEBHOOK_SECRET: ${WEBHOOK_SECRET}
    ports:
      - "${PORT:-3000}:3000"
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - .env:/app/.env
    networks:
      - studyoptimizer-network
    
volumes:
  database_data:
    driver: local

networks:
  studyoptimizer-network:
    driver: bridge